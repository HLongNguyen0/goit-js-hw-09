{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","btn","onSubmit","event","preventDefault","delay","step","amount","currentTarget","position","setAttribute","setTimeout","createPromise","then","console","log","catch","finally","a","setInterval","value","reset","clearInterval","removeAttribute","shouldResolve","Math","random","Promise","resolve","reject","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,IAAKF,SAASC,cAAc,WAK9B,SAASE,EAASC,GAChBA,EAAMC,iBACA,MAAA,MAAEC,EAAF,KAASC,EAAT,OAAeC,GAAWJ,EAAMK,cAClCC,IAAAA,EAAW,EACfZ,EAAKI,IAAIS,aAAa,WAAY,IAClCC,WAAWR,IACTS,IACGC,KAAK,KACJC,QAAQC,IAAI,OAAQN,GACpBA,GAAY,IAEbO,MAAM,KACLF,QAAQC,IAAI,MAAON,GACnBA,GAAY,IAEbQ,QAAQ,KACDC,MAAAA,EAAIC,YAAY,KAChBV,EAAWF,EAAOa,MACpBR,IACGC,KAAK,KACJC,QAAQC,IAAI,OAAQN,GACpBA,GAAY,IAEbO,MAAM,KACLF,QAAQC,IAAI,MAAON,GACnBA,GAAY,KAGhBZ,EAAKC,KAAKuB,QACVC,cAAcJ,GACdrB,EAAKI,IAAIsB,gBAAgB,cAE1BjB,EAAKc,UAEXf,EAAMe,OAGX,SAASR,EAAcH,GACfe,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BpB,GAAY,EACRe,EACFI,EAAQnB,GAERoB,EAAOpB,KA9CbZ,EAAKC,KAAKgC,iBAAiB,SAAU5B","file":"03-promises.170f6a90.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('form'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let position = 0;\n  refs.btn.setAttribute('disabled', '');\n  setTimeout(event => {\n    createPromise()\n      .then(() => {\n        console.log('good', position);\n        position += 1;\n      })\n      .catch(() => {\n        console.log('bad', position);\n        position += 1;\n      })\n      .finally(() => {\n        const a = setInterval(() => {\n          if (position < amount.value) {\n            createPromise()\n              .then(() => {\n                console.log('good', position);\n                position += 1;\n              })\n              .catch(() => {\n                console.log('bad', position);\n                position += 1;\n              });\n          } else {\n            refs.form.reset();\n            clearInterval(a);\n            refs.btn.removeAttribute('disabled');\n          }\n        }, step.value);\n      });\n  }, delay.value);\n}\n\nfunction createPromise(position) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    position += 1;\n    if (shouldResolve) {\n      resolve(position);\n    } else {\n      reject(position);\n    }\n  });\n}\n"]}